services:
  grafana:
    image: docker.io/grafana/grafana-oss:latest
    restart: unless-stopped
    volumes:
      - type: bind
        source: /opt/shift-mon/grafana-config
        target: /etc/grafana
      - type: bind
        source: /opt/shift-mon/grafana
        target: /var/lib/grafana
  loki:
    image: docker.io/grafana/loki:latest
    restart: unless-stopped
    volumes:
      - type: bind
        source: /opt/shift-mon/loki
        target: /loki
      - type: bind
        source: /opt/shift-mon/loki-config
        target: /etc/loki/
    command:
      - "-config.file=/etc/loki/loki-config.yml"
  victoriametrics:
    restart: unless-stopped
    image: docker.io/victoriametrics/victoria-metrics:stable
    volumes:
      - type: bind
        source: /opt/shift-mon/victoriametrics-storage
        target: /victoriametrics-storage
    command:
      - "--retentionPeriod=90d"
      - "--storageDataPath=/victoriametrics-storage"
      - "--httpListenAddr=:8428"
{% if victoria.insecure is defined and victoria.insecure is true %}
    ports:
      - 8428:8428
{% endif %}
  uptime-kuma:
    image: docker.io/louislam/uptime-kuma:1
    restart: always
    volumes:
      - type: bind
        source: /opt/shift-mon/uptime-kuma
        target: /app/data
  crowdsec:
    image: docker.io/crowdsecurity/crowdsec:latest
    restart: always
    environment:
      COLLECTIONS: "crowdsecurity/traefik"
      #GID: "${GID-1000}"
    depends_on:
     - 'traefik'
    volumes:
      - type: bind
        source: /opt/shift-mon/crowdsec-db
        target: /var/lib/crowdsec/data/
      - type: bind
        source: /opt/shift-mon/crowdsec-config
        target: /etc/crowdsec/
      - type: bind
        source: /opt/shift-mon/traefik
        target: /etc/traefik
      - type: bind
        source: /opt/shift-mon/crowdsec-log
        target: /var/log
{% if crowdsec_api_key is defined %}
  crowdsec-bouncer:
    image: docker.io/fbonalair/traefik-crowdsec-bouncer:latest
    restart: unless-stopped
    depends_on: 
      - crowdsec
    environment:
      CROWDSEC_BOUNCER_API_KEY: "{{ crowdsec_api_key }}"
      CROWDSEC_AGENT_HOST: "crowdsec:8080"
      GIN_MODE: "release"
{% endif %}
  traefik:
    restart: unless-stopped
    image: docker.io/traefik:latest
    volumes:
      - type: bind
        source: /opt/shift-mon/traefik
        target: /etc/traefik
    ports:
     - 80:80
     - 443:443
{% if dns.provider is defined and dns.auth_values is defined %}
    environment:
{% for key, value in dns.auth_values.items() %}
      {{key}}: '{{value}}'
{% endfor %}
{% endif %}
    command:
      - "--auth.config=/config/auth-config.yml"