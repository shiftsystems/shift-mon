  grafana:
    image: docker.io/grafana/grafana-oss:latest
    restart: unless-stopped
    volumes:
      - type: bind
        source: /opt/shift-mon/grafana-config
        target: /etc/grafana
      - type: bind
        source: /opt/shift-mon/grafana
        target: /var/lib/grafana
    depends_on:
      valkey:
        condition: service_healthy
    healthcheck:
      test: 'wget -qO- http://127.0.0.1:3000/api/health'
      interval: '30s'
      timeout: '10s'
      retries: 5
    environment:
      GF_INSTALL_PLUGINS: https://github.com/VictoriaMetrics/grafana-datasource/releases/download/{{ vm_datasource_release.json.tag_name }}/victoriametrics-datasource-{{ vm_datasource_release.json.tag_name }}.zip;victoriametrics-datasource,https://github.com/VictoriaMetrics/victorialogs-datasource/releases/download/{{ vl_datasource_release.json.tag_name }}/victoriametrics-logs-datasource-{{ vl_datasource_release.json.tag_name }}.zip;victorialogs-datasource
  alertmanager:
    image: prom/alertmanager:latest
    restart: unless-stopped
    command:
      - '--config.file=/config/alertmanager.yml'
      - '--web.external-url=https://am.local.shiftsystems.net'
      - '--storage.path=/data'
    volumes:
      - type: bind
        source: /opt/shift-mon/alertmanager/data
        target: /data
      - type: bind
        source: /opt/shift-mon/alertmanager/config
        target: /config
  loki:
    image: docker.io/grafana/loki:3.2.0
    restart: unless-stopped
    volumes:
      - type: bind
        source: /opt/shift-mon/loki
        target: /loki
      - type: bind
        source: /opt/shift-mon/loki-config
        target: /etc/loki/
    command:
      - "-config.file=/etc/loki/loki-config.yml"
    healthcheck:
      test: "wget -qO- http://127.0.0.1:3100/ready"
      interval: "30s"
      timeout: "10s"
      retries: 5
  victoriametrics:
    restart: unless-stopped
{% if victoria.license is defined %}
    image: docker.io/victoriametrics/victoria-metrics:enterprise-stable
{% else %}
    image: docker.io/victoriametrics/victoria-metrics:stable
{% endif %}
    volumes:
      - type: bind
        source: /opt/shift-mon/victoriametrics
        target: /victoriametrics
      - type: bind
        source: /opt/shift-mon/victoriametrics-storage
        target: /victoriametrics-storage
    command:
      - "-retentionPeriod={{ victoria.retention_period | default('90d') }}"
      - "-storageDataPath=/victoriametrics-storage"
      - "-httpListenAddr=:8428"
      - "-vmalert.proxyURL=http://vmalert:9093"
      - "-promscrape.config=/victoriametrics/scrape-config.yml"
{% if victoria.license is defined %}
      - "-license={{ victoria.license }}"
{% endif %}
{% if victoria.license is defined and victoria.retention_filter is defined %}
      - "-retentionFilter={{ victoria.retention_filter }}"
{% endif %}
{% if victoria.license is defined and victoria.downsampling_period is defined %}
      - "-downsampling.period={{ victoria.downsampling_period }}"
{% endif %}
    healthcheck:
      test: "wget -qO- http://127.0.0.1:8428/-/healthy"
      interval: "30s"
      timeout: "10s"
      retries: 5
{% if victoria.insecure is defined and victoria.insecure is true %}
    ports:
      - 8428:8428
{% endif %}
  vmalert:
    restart: unless-stopped
{% if victoria.license is defined %}
    image: docker.io/victoriametrics/vmalert:enterprise-stable
{% else %}
    image: docker.io/victoriametrics/vmalert:stable
{% endif %}
    volumes:
      - type: bind
        source: /opt/shift-mon/vmalert/rules
        target: /rules
    command:
      - "-datasource.url=http://victoriametrics:8428"
      - "-remoteWrite.url=http://victoriametrics:8428"
      - "-remoteRead.url=http://victoriametrics:8428"
      - "-httpListenAddr=0.0.0.0:9093"
      - "-rule=/rules/*.yaml"
      - "-rule=/rules/*.yml"
      - "-configCheckInterval=1m"
{% if victoria.license is defined %}
      - "-license={{ victoria.license }}"
{% endif %}
    healthcheck:
      test: "wget -qO- http://127.0.0.1:9093/-/healthy"
      interval: "30s"
      timeout: "10s"
      retries: 5
    ports:
     - "127.0.0.1:9093:9093"
  vmauth:
    restart: unless-stopped
{% if victoria.license is defined %}
    image: docker.io/victoriametrics/vmauth:enterprise-stable
{% else %}
    image: docker.io/victoriametrics/vmauth:stable
{% endif %}
    volumes:
      - type: bind
        source: /opt/shift-mon/vmauth
        target: /auth
    command:
      - "-auth.config=/auth/auth-config.yml"
      - "-httpListenAddr=0.0.0.0:8427"
{% if victoria.license is defined %}
      - "-license={{ victoria.license }}"
{% endif %}
    healthcheck:
      test: "wget -qO- http://127.0.0.1:8427/-/healthy"
      interval: "30s"
      timeout: "10s"
      retries: 5
    ports:
     - "127.0.0.1:8427:8427"
{% if vmanomaly_enabled and victoria.license is defined %}
  vmanomaly:
    image: victoriametrics/vmanomaly:latest
    restart: always
    depends_on:
      victoriametrics:
        condition: service_healthy
    volumes:
      - type: bind
        source: /opt/shift-mon/vmanomaly-config
        target: /config
      - type: bind
        source: /opt/shift-mon/vmanomaly-models
        target: /models
    command:
      - "/config/config.yml"
      - "--license={{ victoria.license }}"
    user: "1000:1000"
    environment:
      VMANOMALY_MODEL_DUMPS_DIR: /models
{% endif %}
  valkey:
    image: docker.io/valkey/valkey:8-alpine
    restart: always
    expose:
      - 6379
    volumes:
      - type: bind
        source: /opt/shift-mon/valkey
        target: /data
    deploy:
      resources:
        limits:
          memory: 500m
          cpus: "0.5"
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      timeout: 5s
      interval: 5s
      retries: 10
  victorialogs:
    image: docker.io/victoriametrics/victoria-logs:latest
    restart: unless-stopped
    volumes:
      - type: bind
        source: /opt/shift-mon/victorialogs
        target: /victorialogs
    command:
      - -storageDataPath=/victorialogs
      - -retentionPeriod={{ victorialogs.retention_period }}
{% if victorialogs.syslog_port is defined %}
      - '-syslog.listenAddr.tcp=0.0.0.0:{{ victorialogs.syslog_port }}'
      - '-syslog.listenAddr.udp=0.0.0.0:{{ victorialogs.syslog_port }}'
    ports:
      - {{ victorialogs.syslog_port }}:{{ victorialogs.syslog_port }}
{% endif %}
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:9428/health"]
      interval: 5s
      timeout: 5s
      retries: 10
  traefik:
    restart: unless-stopped
    image: docker.io/traefik:latest
    volumes:
      - type: bind
        source: /opt/shift-mon/traefik
        target: /etc/traefik
    ports:
     - "80:80"
     - "443:443"
     - "127.0.0.1:8082:8082"
{% if dns.provider is defined and dns.auth_values is defined %}
    environment:
{% for key, value in dns.auth_values.items() %}
      {{key}}: '{{value}}'
{% endfor %}
{% endif %}
    command:
      - "--auth.config=/config/auth-config.yml"
