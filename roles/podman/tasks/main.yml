- name: Install packages on RHEL based Systems
  dnf:
    name: '{{ redhat_packages }}'
    state: latest
  become: true
  when: ansible_facts['os_family'] == 'RedHat'

- name: Install packages on debian based systems
  apt:
    name: '{{ debian_packages }}'
    state: latest
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: install podman compose on debian based systems
  pip:
    name: podman-compose
    state: latest
  become: true
  when: ansible_facts['os_family'] == 'Debian'

- name: start and enable podman
  systemd:
    name: podman
    state: started
    enabled: true
  become: true
  when: ansible_facts['os_family'] == 'Redhat'

- name: generate compose file
  template:
    src: docker-compose.yml
    dest: /opt/shift-mon/docker-compose.yml

#- name: create update service
#  template:
#    src: shift-mon-update.service
#    dest: /etc/systemd/system/shift-mon-update.service
#  become: true
#  notify: reload systemd

#- name: create update timer
#  template:
#    src: shift-mon-update.timer
#    dest: /etc/systemd/system/shift-mon-update.timer
#  become: true
#  notify: reload systemd

- name: run podman-compose commands
  shell:
    cmd: podman-compose down && podman-compose up -d
    chdir: /opt/shift-mon
  become: true