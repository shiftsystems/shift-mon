map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
    listen 80;
    listen [::]:80;
    server_name {{ grafana.domain }};
    # enforce https
    return 302 https://{{ grafana.domain }}:443$request_uri;
}


server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ grafana.domain }};
    ssl_certificate /etc/letsencrypt/live/{{ grafana.domain }}/cert.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ grafana.domain }}/privkey.pem;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Robots-Tag none;
    add_header X-Download-Options noopen;
    add_header X-Permitted-Cross-Domain-Policies none;
    add_header Referrer-Policy no-referrer;
    add_header Strict-Transport-Security "max-age=15552000; includeSubDomains" always;

    location / {
        proxy_set_header X-Real-IP            $remote_addr;
        proxy_set_header X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto    "https";
        proxy_set_header Host $http_host;
        proxy_pass http://localhost:3000;
    }

      # Proxy Grafana Live WebSocket connections.
    location /api/live {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $http_host;
      proxy_set_header Host $http_host;
      proxy_pass http://localhost:3000/;
    }  
}
