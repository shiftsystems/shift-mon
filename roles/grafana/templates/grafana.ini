[server]
domain = {{ grafana.domain }}
root_url = https://{{ grafana.domain }}/

[database]
wal = true
query_retries = 2

[remote_cache]
type = redis
connstr = `addr=valkey:6379,pool_size=100,db=1,ssl=false`

[analytics]
reporting_enabled = false

[security]
{% if grafana.admin_user is defined %}admin_user = "{{ grafana.admin_user }}"{% endif %}

{% if grafana.admin_password is defined %}admin_password = "{{ grafana.admin_password }}"{% endif %}

{% if grafana.admin_email is defined %}admin_email = "{{ grafana.admin_email }}"{% endif %}

cookie_secure = true
strict_transport_security = true
strict_transport_security_max_age_seconds = 86400
strict_transport_security_subdomains = false
x_content_type_options = true
x_xss_protection = true

[auth]

{% if google.auth is defined and google.auth %}
[auth.google]
enabled = true
allow_sign_up = true
client_id = "{{ google.client_id }}"
client_secret = "{{ google.client_secret }}"
scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
auth_url = https://accounts.google.com/o/oauth2/auth
token_url = https://accounts.google.com/o/oauth2/token
api_url = https://www.googleapis.com/oauth2/v1/userinfo
allowed_domains = "{{ google.allowed_domains }}"
auto_login = {{ oauth.auto_login|default('true') }}
{% endif %}
{% if oauth is defined and oauth.enabled %}
[auth.generic_oauth]
enabled = true
name = "{{ oauth.name }}"
allow_sign_up = true
client_id = "{{ oauth.client_id }}"
client_secret = "{{ oauth.client_secret }}"
scopes = "{{ oauth.scope }}"
email_attribute_name = email:primary
auth_url = "{{ oauth.auth_url }}"
token_url = "{{ oauth.token_url }}"
api_url = "{{ oauth.api_url }}"
allowed_domains = "{{ oauth.allowed_domains }}"
use_pkce = true
allow_assign_grafana_admin = true
skip_org_role_sync = true
auto_login = {{ oauth.auto_login|default('true') }}
{% endif %}

[auth.ldap]
{% if ldap_host is defined %}
enabled = true
config_file = /etc/grafana/ldap.toml
allow_sign_up = true
{% else %}
enabled = false
{% endif %}

[smtp]
{% if email.enabled %}
enabled = true
host = {{ email.host }}:{{ email.port }}
from_address = {{ email.alert_from_address }}
from_name = {{ email.alert_from_name }}
skip_verify = true
{% endif %}
{% if email.user is defined %}
user = {{ email.user }}
{% endif %}
{% if email.password is defined %}
password = {{ email.password }}
{% endif %}

[emails]
;welcome_email_on_sign_up = false
;templates_pattern = emails/*.html, emails/*.txt
;content_types = text/html

#################################### Logging ##########################
[log]
mode = console
level = info

[log.console]
format = json

[unified_alerting]
enabled = true

[unified_alerting.state_history]
enabled = true
backend = loki
loki_remote_url = `http://loki:3100`

[alerting]
enabled = false

[metrics]
# Disable / Enable internal metrics
enabled = true
# Graphite Publish interval
interval_seconds  = 10
# Disable total stats (stat_totals_*) metrics to be generated
disable_total_stats = true

#If both are set, basic auth will be required for the metrics endpoint.
basic_auth_username = {{ grafana.basic_auth_user }}
basic_auth_password = {{ grafana.basic_auth_password }}

[plugins]
allow_loading_unsigned_plugins = victoriametrics-metrics-datasource,victoriametrics-logs-datasource
plugin_admin_enabled = true

[live]
allowed_origins = *

[feature_toggles]
grafanaManagedRecordingRules = true

[recording_rules]
enabled = true
url = http://victoriametrics:8428/api/v1/write
