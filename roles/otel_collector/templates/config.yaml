extensions:
  health_check:
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679
  bearertokenauth:
    scheme: "Bearer"
    token: "{{ shiftmon_otel_collector_token }}"
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  hostmetrics:
    collection_interval: 10s # default = 1m
    initial_delay: 1s # default = 1s
    root_path: /
    scrapers:
      cpu:
      disk:
      filesystem:
      load:
      memory:
      network:
      paging:
      process:
        include:
          match_type: 'regexp'
          names:
{% for process in shiftmon_otel_processes %}
            - {{ process }}
{% endfor %}
      processes:
      system:
  prometheus:
    config:
      scrape_configs:
      - job_name: 'otel-collector'
        scrape_interval: 10s
        static_configs:
        - targets:
            - '0.0.0.0:8888'
  syslog:
    udp:
      listen_address: "{{ shiftmon_syslog_listen_address }}:{{ shiftmon_syslog_port }}"
    protocol: rfc5424
  journald:
    directory: /var/log/journal
  filelog:
    include:
       - /var/log/tetragon/tetragon.log
    operators:
      - type: json_parser
        parse_from: body
processors:
  batch:
  attributes/metrics:
    actions:
      - key: device
        action: delete
        pattern: 'veth.*'
  resourcedetection/system:
    detectors:
      - "system"
    system:
      hostname_sources:
        - "os"
        - "dns"
  transform/parse_pbs_tasks:
    error_mode: ignore
    log_statements:
      - context: log
        conditions:
          - IsMatch(body,"pbs.*")
        statements:
          - merge_maps(log.attributes, ExtractGrokPatterns(log.attributes["message"], "UPID:%{DATA:pbs_host}:%{DATA:task_id_1}:%{DATA:task_id_2}:%{DATA:task_id_3}:%{DATA:task_id_4}:%{DATA:cmd}:%{DATA:task_path}:%{DATA:user}:%{GREEDYDATA:log_message}", true, ["WOOHOO=%{ELB_URI} otel"]), "insert")
exporters:
  otlphttp/metrics:
    metrics_endpoint: '{{ shiftmon_otlp_metrics_endpoint }}'
    compression: gzip
    encoding: proto
    auth:
      authenticator: bearertokenauth
  otlphttp/logs:
    logs_endpoint: '{{ shiftmon_otlp_logs_endpoint }}'
    compression: gzip
    encoding: proto
    headers:
      VL-Msg-Field: 'MESSAGE'
      VL-Stream-Fields: 'host.name,log.file.name,_SYSTEMD_UNIT,_MACHINE_ID'
    auth:
      authenticator: bearertokenauth
  otlphttp/traces:
    traces_endpoint: '{{ shiftmon_otlp_traces_endpoint }}'

service:
  pipelines:
    traces:
      receivers:
        - otlp
      processors:
        - batch
        - resourcedetection/system
      exporters:
        - otlphttp/traces
    metrics:
      receivers:
        - otlp
        - hostmetrics
        - prometheus
      processors:
        - batch
        - attributes/metrics
        - resourcedetection/system
      exporters: 
        - otlphttp/metrics
    logs:
      receivers:
        - otlp
        - journald
        - filelog
        - syslog
      processors:
        - batch
        - resourcedetection/system
        - transform/parse_pbs_tasks
      exporters:
        - otlphttp/logs
  extensions:
    - health_check
    - pprof
    - zpages
    - bearertokenauth
