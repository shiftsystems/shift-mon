serversTransport:
  insecureSkipVerify: true
providers:
  file:
    filename: /etc/traefik/traefik.yml
tls:
  certificates:
{% if grafana.cert_path is defined and grafana.key_path is defined %}
    - certfile: /etc/traefik/certs/grafana.crt
      keyfile: /etc/traefik/certs/grafana.key
{% endif %}
{% if victoria.cert_path is defined and victoria.key_path is defined %}
    - certfile: /etc/traefik/certs/victoria.crt
      keyfile: /etc/traefik/certs/victoria.key
{% endif %}
{% if loki.cert_path is defined and loki.key_path is defined %}
    - certfile: /etc/traefik/certs/loki.crt
      keyfile: /etc/traefik/certs/loki.key
{% endif %}
{% if uptimekuma.cert_path is defined and uptimekuma.key_path is defined %}
    - certfile: /etc/traefik/certs/uptime-kuma.crt
      keyfile: /etc/traefik/certs/uptime-kuma.key
{% endif %}
{% if oncall.cert_path is defined and oncall.key_path is defined %}
    - certfile: /etc/traefik/certs/oncall.crt
      keyfile: /etc/traefik/certs/oncall.key
{% endif %}
  options:
    default:
      minVersion: VersionTLS12
      cipherSuites:
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
entryPoints:
  web:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: websecure
  websecure:
    address: ":443"
    http2:

certificatesResolvers:
  dynamicResolver:
    acme:
      storage: /etc/traefik/acme.json
{% if dns.provider is not defined %}
      httpChallenge:
        entryPoint: web
{% if acme_url is defined %}
      caServer: '{{ acme_url }}'
{% endif %}
      email: '{{ tls.email }}'
{% else %}
      dnsChallenge:
        provider: '{{ dns.provider }}'
        delayBeforeCheck: 0
        resolvers:
          - "1.1.1.1:53"
          - "1.0.0.1:53"
{% endif %}
accessLog:
  filePath: '/etc/traefik/access.json'
  format: json
metrics:
  influxDB:
    address: http://victoriametrics:8428
    protocol: http
    database: linux
    addRoutersLabels: true
    addServicesLabels: true
    additionalLabels:
      host: {{ ansible_hostname }}
http:
  middlewares:
    basic-auth:
      basicAuth:
        usersfile: "/etc/traefik/htpasswd"
  routers:
{% if uptime_kuma_enabled %}
    uptime-kuma:
      rule: Host(`{{ uptimekuma.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: uptime-kuma
      entryPoints:
        - websecure
{% endif %}
    grafana_metrics:
      rule: Host(`{{ grafana.domain }}`) && Path(`/metrics`)
      priority: 2
      tls:
        certResolver: dynamicResolver
      service: grafana
      middlewares:
        - basic-auth
      entryPoints:
        - websecure
    grafana:
      rule: Host(`{{ grafana.domain }}`)
      priority: 1
      tls:
        certResolver: dynamicResolver
      service: grafana
      entryPoints:
        - websecure
    loki:
      rule: Host(`{{ loki.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: loki
      middlewares:
        - basic-auth
      entryPoints:
        - websecure
    victoriametrics:
      rule: Host(`{{ victoria.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: victoriametrics
      middlewares:
        - basic-auth
      entryPoints:
        - websecure
{% if oncall_enabled %}
    oncall:
      rule: Host(`{{ oncall.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: oncall
      entryPoints:
        - websecure
{% endif %}
  services:
    grafana:
      loadBalancer:
        servers:
          - url: http://grafana:3000
        healthCheck:
          path: /api/health
          interval: "10s"
          timeout: "5s"
    loki:
      loadBalancer:
        servers:
          - url: http://loki:3100
        healthCheck:
          path: /ready
          interval: "10s"
          timeout: "5s"

    victoriametrics:
      loadBalancer:
        servers:
          - url: http://victoriametrics:8428
        healthCheck:
          path: /health
          interval: "10s"
          timeout: "5s"
{% if uptime_kuma_enabled %}
    uptime-kuma:
      loadBalancer:
        servers:
          - url: http://uptime-kuma:3001
        healthCheck:
          path: /
          interval: "10s"
          timeout: "5s"
{% endif %}
{% if oncall_enabled %}
    oncall:
      loadBalancer:
        servers:
          - url: http://engine:8080
        healthCheck:
          path: /
          interval: "10s"
          timeout: "5s"
{% endif %}
