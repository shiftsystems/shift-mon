http:
  routers:
    grafana:
      rule: Host(`{{ grafana.domain }}`)
      priority: 1
      tls:
        certResolver: dynamicResolver
      service: grafana
      entryPoints:
        - websecure
    victorialogs:
      rule: Host(`{{ victorialogs.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: vmauth
      entryPoints:
        - websecure
    victoriametrics:
      rule: Host(`{{ victoria.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: vmauth
      entryPoints:
        - websecure
{% if shiftmon_vmanomaly_domain is defined %}
    vmanomaly:
      rule: Host(`{{ shiftmon_vmanomaly_domain }}`)
      tls:
        certResolver: dynamicResolver
      service: vmauth
      entryPoints:
        - websecure
{% endif %}
{% if alertmanager.domain is defined %}
    alertmanager:
      rule: Host(`{{ alertmanager.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: vmauth
      entryPoints:
        - websecure
{% endif %}
  services:
    grafana:
      loadBalancer:
        servers:
          - url: http://grafana:3000
        healthCheck:
          path: /api/health
          interval: "10s"
          timeout: "5s"
    vmauth:
      loadBalancer:
        servers:
          - url: http://vmauth:8427
        healthCheck:
          port: 9999
          path: /health
          interval: "10s"
          timeout: "5s"
{% if alertmanager.domain is defined %}
    alertmanager:
      loadBalancer:
        servers:
          - url: http://alertmanager:9093
        healthCheck:
          path: '/-/healthy'
          interval: "10s"
          timeout: "5s"
{% endif %}
