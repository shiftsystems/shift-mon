http:
  middlewares:
    basic-auth:
      basicAuth:
        usersfile: "/etc/traefik/htpasswd"
  routers:
{% if uptime_kuma_enabled %}
    uptime-kuma:
      rule: Host(`{{ uptimekuma.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: uptime-kuma
      entryPoints:
        - websecure
{% endif %}
    grafana_metrics:
      rule: Host(`{{ grafana.domain }}`) && Path(`/metrics`)
      priority: 2
      tls:
        certResolver: dynamicResolver
      service: grafana
      middlewares:
        - basic-auth
      entryPoints:
        - websecure
    grafana:
      rule: Host(`{{ grafana.domain }}`)
      priority: 1
      tls:
        certResolver: dynamicResolver
      service: grafana
      entryPoints:
        - websecure
    loki:
      rule: Host(`{{ loki.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: loki
      middlewares:
        - basic-auth
      entryPoints:
        - websecure
    victoriametrics:
      rule: Host(`{{ victoria.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: victoriametrics
      entryPoints:
        - websecure
{% if oncall_enabled %}
    oncall:
      rule: Host(`{{ oncall.domain }}`)
      tls:
        certResolver: dynamicResolver
      service: oncall
      entryPoints:
        - websecure
{% endif %}
  services:
    grafana:
      loadBalancer:
        servers:
          - url: http://grafana:3000
        healthCheck:
          path: /api/health
          interval: "10s"
          timeout: "5s"
    loki:
      loadBalancer:
        servers:
          - url: http://loki:3100
        healthCheck:
          path: /ready
          interval: "10s"
          timeout: "5s"

    victoriametrics:
      loadBalancer:
        servers:
          - url: http://vmauth:8427
        healthCheck:
          path: /health
          interval: "10s"
          timeout: "5s"
{% if uptime_kuma_enabled %}
    uptime-kuma:
      loadBalancer:
        servers:
          - url: http://uptime-kuma:3001
        healthCheck:
          path: /
          interval: "10s"
          timeout: "5s"
{% endif %}
{% if oncall_enabled %}
    oncall:
      loadBalancer:
        servers:
          - url: http://engine:8080
        healthCheck:
          path: /
          interval: "10s"
          timeout: "5s"
{% endif %}
