- name: Make sure GPG is installed
  ansible.builtin.apt:
    name: gpg
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Add GPG key for repo on Debian based systems
  ansible.builtin.apt_key:
    url: https://repos.influxdata.com/influxdata-archive_compat.key
    state: present
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Add repo for Debian based systems
  ansible.builtin.apt_repository:
    repo: "deb https://repos.influxdata.com/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} stable"
    state: present
    update_cache: false
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Add repo for Redhat based systems
  ansible.builtin.yum_repository:
    name: influxdb
    description: influx db software
    baseurl: https://repos.influxdata.com/centos/{{ ansible_distribution_major_version }}/x86_64/stable/
    gpgcheck: true
    gpgkey: https://repos.influxdata.com/influxdata-archive_compat.key
    state: present
  become: true
  when: ansible_facts['os_family'] == "RedHat" and ansible_distribution != "Fedora"

- name: Add repo for Fedora
  ansible.builtin.yum_repository:
    name: influxdb
    description: influx db software
    baseurl: https://repos.influxdata.com/centos/9/x86_64/stable/
    gpgcheck: false
    gpgkey: https://repos.influxdata.com/influxdata-archive_compat.key
    state: present
  become: true
  when: ansible_distribution == "Fedora"

- name: Install Telegraf on Debian based systems
  ansible.builtin.apt:
    name: telegraf
    update_cache: true
    state: latest
  become: true
  when: ansible_facts['os_family'] == "Debian"
  notify: Restart Telegraf

- name: Install Telegraf on Redhat based systems
  ansible.builtin.dnf:
    name: telegraf
    state: latest
  become: true
  when: ansible_facts['os_family'] == "RedHat"
  notify: Restart Telegraf

- name: Add telegraf defaults file
  ansible.builtin.template:
    src: telegraf-defaults.j2
    dest: /etc/default/telegraf
    mode: "650"
    owner: "telegraf"
    group: "telegraf"
  become: true
  notify: Restart Telegraf

- name: Download telegraf config
  ansible.builtin.copy:
    src: "linux/telegraf.conf"
    dest: /etc/telegraf/telegraf.conf
  become: true
  notify: Restart Telegraf

- name: Gather Systemd units
  ansible.builtin.service_facts:

- name: Add Meshcentral Config if Meshcentral is installed
  ansible.builtin.copy:
    src: "linux/mesh-central.conf"
    dest: /etc/telegraf/telegraf.d/mesh-central.conf
  become: true
  when: "'meshagent.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Add Crowdsec Config if Crowdsec is installed
  ansible.builtin.copy:
    src: "linux/crowdsec.conf"
    dest: /etc/telegraf/telegraf.d/crowdsec.conf
  become: true
  when: "'crowdsec.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Add Adguard Config if Adguard is installed
  ansible.builtin.copy:
    src: "linux/adgaurd.conf"
    dest: /etc/telegraf/telegraf.d/adgaurd.conf
  become: true
  when: "'AdGuardHome.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Add telegraf to the nginx group on RedHat based systems
  ansible.builtin.user:
    name: telegraf
    groups: root
    append: true
  become: true
  when: "ansible_facts['os_family'] == 'RedHat' and 'nginx.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Add Caddy Config if Caddy is installed
  ansible.builtin.copy:
    src: "linux/caddy.conf"
    dest: /etc/telegraf/telegraf.d/caddy.conf
  become: true
  when: "'caddy.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Add telegraf to the nginx group on Debian based systems
  ansible.builtin.user:
    name: telegraf
    groups: adm
    append: true
  become: true
  when: ansible_facts['os_family'] == "Debian"
  notify: Restart Telegraf

- name: Add Nginx config When nginx is installed
  ansible.builtin.copy:
    src: "linux/nginx.conf"
    dest: /etc/telegraf/telegraf.d/nginx.conf
  become: true
  when: "'nginx.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Add telegraf to docker group when docker is installed
  ansible.builtin.user:
    name: telegraf
    groups: docker
    append: true
  become: true
  when: "'docker.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Deploy Docker config When Docker is installed
  ansible.builtin.copy:
    src: "linux/docker.conf"
    dest: /etc/telegraf/telegraf.d/docker.conf
  become: true
  when: "'docker.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Deploy Podman config When Podman service is present
  ansible.builtin.copy:
    src: "linux/podman.conf"
    dest: /etc/telegraf/telegraf.d/podman.conf
  become: true
  when: "'podman.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Deploy Libvirt config When Libvirt service is present
  ansible.builtin.copy:
    src: "linux/libvirt.conf"
    dest: /etc/telegraf/telegraf.d/libvirt.conf
  become: true
  when: "'libvirtd.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: MySQL config when MySQL is installed
  ansible.builtin.copy:
    src: "linux/mysql.conf"
    dest: /etc/telegraf/telegraf.d/mysql.conf
  become: true
  when: "'mysqld.service' or 'mysql.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Deploy Loki config when Loki is installed
  ansible.builtin.copy:
    src: "linux/loki.conf"
    dest: /etc/telegraf/telegraf.d/loki.conf
  become: true
  when: "'loki.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Deploy Victoriametrics config when Victoriametrics is installed
  ansible.builtin.copy:
    src: "linux/victoriametrics.conf"
    dest: /etc/telegraf/telegraf.d/victoriametrics.conf
  become: true
  when: "'victoriametrics.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Deploy VSphere config when Vsphere Creds are Available
  ansible.builtin.copy:
    src: "linux/vsphere.conf"
    dest: /etc/telegraf/telegraf.d/vsphere.conf
  become: true
  when: "vsphere_enabled is defined and vsphere_enabled"
  notify: Restart Telegraf

- name: Add telegraf to the MySQL group on Debian based systems
  ansible.builtin.file:
    path: '/tmp/stubby'
    state: absent
  when: "'mysql.service' in ansible_facts.services"
  notify: Restart Telegraf

- name: Install Rsyslog
  ansible.builtin.package:
    name: rsyslog
    state: latest
  become: true
  when: syslog is defined and syslog == "rsyslog"
  notify: restart syslog

- name: Place Rsyslog config is installed when syslog is enabled
  ansible.builtin.copy:
    src: "linux/50-telegraf.conf"
    dest: /etc/rsyslog.d/50-telegraf.conf
  become: true
  when: syslog is defined and syslog == "rsyslog"
  notify: restart syslog

- name: Start and enable Rsyslog service
  ansible.builtin.systemd:
    name: rsyslog
    state: started
    enabled: true
  become: true
  when: syslog is defined and syslog == "rsyslog"

- name: Add Telegraf config for syslog
  ansible.builtin.copy:
    src: "linux/syslog.conf"
    dest: /etc/telegraf/telegraf.d/syslog.conf
  become: true
  when: syslog is defined
  notify: Restart Telegraf

- name: Add Telegraf config for remote syslog
  ansible.builtin.copy:
    src: "linux/remote-syslog.conf"
    dest: /etc/telegraf/telegraf.d/remote-syslog.conf
  become: true
  when: remote_syslog is defined and remote_syslog
  notify: Restart Telegraf

- name: Allow remote syslog traffic on UFW
  community.general.ufw:
    rule: allow
    port: 6666
    proto: udp
  become: true
  when: "remote_syslog is defined and remote_syslog and 'ufw.service' in ansible_facts.services"

- name: Allow remote syslog traffic on Firewalld
  ansible.posix.firewalld:
    state: enabled
    port: 6666/udp
  become: true
  when: "remote_syslog is defined and remote_syslog and 'firewalld.service' in ansible_facts.services"

- name: Create Telegraf override directory
  ansible.builtin.file:
    name: /etc/systemd/system/telegraf.service.d
    state: directory
  become: true
  when: telegraf_root is defined and telegraf_root

- name: Configure Telegraf to run as root
  ansible.builtin.copy:
    src: override.conf
    dest: /etc/systemd/system/telegraf.service.d/override.conf
  become: true
  when: telegraf_root is defined and telegraf_root
  notify: Restart Telegraf

- name: Start and Enable Telegraf
  ansible.builtin.systemd:
    name: telegraf
    enabled: true
    state: started
  become: true
