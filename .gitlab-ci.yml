stages:
    - kics
    - ansible-lint
    - galaxy-publish
    - container-build

kics-scan:
  stage: kics
  image:
    name: checkmarx/kics:latest
    entrypoint: [""]
  script:
    - kics scan -p ${PWD} -o ${PWD} --report-formats json --output-name kics-results --exclude-queries 8d29754a-2a18-460d-a1ba-9509f8d359da,c05e2c20-0a2c-4686-b1f8-5f0a5612d4e8,88841d5c-d22d-4b7e-a6a0-89ca50e44b9f,77783205-c4ca-4f80-bb80-c777f267c547,0008c003-79aa-42d8-95b8-1c2fe37dbfe6,b03a748a-542d-44f4-bb86-9199ab4fd2d5,562952e4-0348-4dea-9826-44f3a2c6117b,6452c424-1d92-4deb-bb18-a03e95d579c4,93d88cf7-f078-46a8-8ddc-178e03aeacf1,22cd11f7-9c6c-4f6e-84c0-02058120b341,965a08d7-ef86-4f14-8792-4a3b2098937e,9513a694-aa0d-41d8-be61-3271e056f36b,fd54f200-402c-4333-a5a4-36ef6709af2f,02d9c71f-3ee8-4986-9c27-1a20d0d19bfc,6e19193a-8753-436d-8a09-76dcff91bb03
  artifacts:
    name: kics-results.json
    paths:
      - kics-results.json
    when: always

ansible-lint:
  stage: ansible-lint
  image: registry.gitlab.com/pipeline-components/ansible-lint:latest
  script:
    - ansible-lint .

galaxy-publish:
  stage: galaxy-publish
  image: quay.io/pulp/galaxy-minimal:latest
  script:
    - 'ansible-galaxy collection build . --force && ansible-galaxy collection publish shiftsystems-shift_mon-$(grep "version: " galaxy.yml | sed "s:.*\ ::").tar.gz --token $GALAXY_API_KEY'
  only:
    - main@shiftsystems/shiftmon

container-build:
  stage: container-build
  image: $CI_REGISTRY/group/project/docker:20.10.16
  services:
    - name: $CI_REGISTRY/group/project/docker:20.10.16-dind
      alias: docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/group/project/image:latest .
    - docker push $CI_REGISTRY/group/project/image:latest
